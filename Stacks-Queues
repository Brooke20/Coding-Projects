class Stack:
    data=[]

    def is_empty(self):
        return self.data==[]

    def push(self, node):
        self.data.append(node)

    def pop(self):
        if not self.is_empty():
            value=self.data[-1]
            del self.data[-1]
            return value
        else:
            print("Nothing to pop")

    def print_stack(self):
        q = 0
        for r in self.data:
            print(self.data[q])
            q+=1



fruit = Stack()
fruit.pop()
fruit.push("Apple")
fruit.push("Banana")
fruit.pop()
fruit.push("Canned Yams")
fruit.push("Durian")
fruit.print_stack()
fruit.pop()
fruit.pop()
fruit.print_stack()


class Queue:
    data=[]

    def enqueue(self, val):
        self.data.append(val)

    def dequeue(self):
        if not self.is_empty():
            value = self.data[-1]
            del self.data[-1]
            return value

    def is_empty(self):
        return self.data==[]

    def print_queue(self):
        x = 0
        '''if not self.is_empty():'''
        for s in self.data:
            print(self.data[x])
            x+=1

q=Queue()

q.enqueue('Job 1')
q.enqueue('Job 2')
q.enqueue('Job 3')
q.print_queue()
q.dequeue()
q.dequeue()
q.print_queue()
